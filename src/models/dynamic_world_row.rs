/*
 * VRChat API Documentation
 *
 *
 * Contact: me@ruby.js.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DynamicWorldRow {
    #[serde(rename = "index")]
    pub index: i32,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "platform")]
    pub platform: String,
    #[serde(rename = "sortHeading")]
    pub sort_heading: String,
    #[serde(rename = "sortOrder")]
    pub sort_order: String,
    #[serde(rename = "sortOwnership")]
    pub sort_ownership: String,
    /// Tag to filter worlds for this row. Not always present.
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
}

impl DynamicWorldRow {
    pub fn new(index: i32, name: String, platform: String, sort_heading: String, sort_order: String, sort_ownership: String) -> DynamicWorldRow {
        DynamicWorldRow {
            index,
            name,
            platform,
            sort_heading,
            sort_order,
            sort_ownership,
            tag: None,
        }
    }
}


