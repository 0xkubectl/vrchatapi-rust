/*
 * VRChat API Documentation
 *
 *
 * Contact: vrchatapi.lpv0t@aries.fyi
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct License {
    /// Either a AvatarID, LicenseGroupID, PermissionID or ProductID. This depends on the `forType` field.
    #[serde(rename = "forId")]
    pub for_id: String,
    #[serde(rename = "forType")]
    pub for_type: crate::models::LicenseType,
    #[serde(rename = "forName")]
    pub for_name: String,
    #[serde(rename = "forAction")]
    pub for_action: crate::models::LicenseAction,
}

impl License {
    pub fn new(for_id: String, for_type: crate::models::LicenseType, for_name: String, for_action: crate::models::LicenseAction) -> License {
        License {
            for_id,
            for_type,
            for_name,
            for_action,
        }
    }
}


